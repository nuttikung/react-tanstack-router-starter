/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginLogin01Import } from './routes/_login/login-01'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const DocsIndexLazyImport = createFileRoute('/docs/')()
const ComponentsIndexLazyImport = createFileRoute('/components/')()
const BlogIndexLazyImport = createFileRoute('/blog/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DocsIndexLazyRoute = DocsIndexLazyImport.update({
  id: '/docs/',
  path: '/docs/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/docs/index.lazy').then((d) => d.Route))

const ComponentsIndexLazyRoute = ComponentsIndexLazyImport.update({
  id: '/components/',
  path: '/components/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/components/index.lazy').then((d) => d.Route),
)

const BlogIndexLazyRoute = BlogIndexLazyImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog/index.lazy').then((d) => d.Route))

const LoginLogin01Route = LoginLogin01Import.update({
  id: '/_login/login-01',
  path: '/login-01',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_login/login-01': {
      id: '/_login/login-01'
      path: '/login-01'
      fullPath: '/login-01'
      preLoaderRoute: typeof LoginLogin01Import
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/components/': {
      id: '/components/'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/docs/': {
      id: '/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login-01': typeof LoginLogin01Route
  '/blog': typeof BlogIndexLazyRoute
  '/components': typeof ComponentsIndexLazyRoute
  '/docs': typeof DocsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login-01': typeof LoginLogin01Route
  '/blog': typeof BlogIndexLazyRoute
  '/components': typeof ComponentsIndexLazyRoute
  '/docs': typeof DocsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_login/login-01': typeof LoginLogin01Route
  '/blog/': typeof BlogIndexLazyRoute
  '/components/': typeof ComponentsIndexLazyRoute
  '/docs/': typeof DocsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login-01' | '/blog' | '/components' | '/docs'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login-01' | '/blog' | '/components' | '/docs'
  id:
    | '__root__'
    | '/'
    | '/_login/login-01'
    | '/blog/'
    | '/components/'
    | '/docs/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginLogin01Route: typeof LoginLogin01Route
  BlogIndexLazyRoute: typeof BlogIndexLazyRoute
  ComponentsIndexLazyRoute: typeof ComponentsIndexLazyRoute
  DocsIndexLazyRoute: typeof DocsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginLogin01Route: LoginLogin01Route,
  BlogIndexLazyRoute: BlogIndexLazyRoute,
  ComponentsIndexLazyRoute: ComponentsIndexLazyRoute,
  DocsIndexLazyRoute: DocsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_login/login-01",
        "/blog/",
        "/components/",
        "/docs/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_login/login-01": {
      "filePath": "_login/login-01.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.lazy.tsx"
    },
    "/components/": {
      "filePath": "components/index.lazy.tsx"
    },
    "/docs/": {
      "filePath": "docs/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
